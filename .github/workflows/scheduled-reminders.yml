# This workflow triggers reminders on a schedule or manually for specific environments.

name: Scheduled Telegram Reminders

on:
  # Manual trigger that lets you choose the environment to run against
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run on'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - production

  # Scheduled triggers will ALWAYS run against the 'production' environment
  schedule:
    - cron: '25 0 * * 1-5'   # 07:25 TH
    - cron: '25 1 * * 1-5'   # 08:25 TH
    - cron: '25 2 * * 1-5'   # 09:25 TH
    - cron: '30 8 * * 1-5'   # 15:30 TH
    - cron: '30 9 * * 1-5'   # 16:30 TH
    - cron: '30 10 * * 1-5'  # 17:30 TH

jobs:
  trigger-reminders:
    # Use the manually selected environment from workflow_dispatch,
    # or default to 'production' for scheduled runs.
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}
    
    runs-on: ubuntu-latest
    name: Trigger Reminder (${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }})
    
    env:
      # These secrets will be securely pulled from the selected GitHub Environment
      APP: ${{ secrets.CLOUD_RUN_URL }}
      TOKEN: ${{ secrets.CRON_SECRET }}

    steps:
      - name: 'Debug Secrets'
        run: |
          echo "Verifying secrets for environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || 'production' }}"
          if [ -z "$TOKEN" ]; then
            echo "::error::CRON_SECRET is empty or not found in the selected environment's secrets!"
            exit 1
          fi
          SECRET_LENGTH=${#TOKEN}
          FIRST_TWO_CHARS=${TOKEN:0:2}
          LAST_TWO_CHARS=${TOKEN: -2}
          echo "Secret is present. Length: $SECRET_LENGTH characters."
          echo "First 2 chars: '$FIRST_TWO_CHARS'"
          echo "Last 2 chars: '$LAST_TWO_CHARS'"

      - name: Send POST Request to /api/cron
        run: |
          REMINDER_TYPE="morning"
          if [[ "${{ github.event.schedule }}" == "30 "* ]]; then
            REMINDER_TYPE="evening"
          fi
          
          UTC_HOUR=$(echo "${{ github.event.schedule }}" | cut -d' ' -f2)
          THAI_HOUR=$(printf %02d $(((UTC_HOUR + 7) % 24)))
          MINUTE=$(echo "${{ github.event.schedule }}" | cut -d' ' -f1)
          THAI_TIME="${THAI_HOUR}:${MINUTE}"

          echo "Triggering '$REMINDER_TYPE' reminder for Thai time: $THAI_TIME"

          curl --fail --max-time 60 -sS \
            -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"type\":\"$REMINDER_TYPE\",\"time\":\"$THAI_TIME\"}" \
            "$APP/api/cron"
