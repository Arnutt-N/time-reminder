# Cloud Build configuration for Telegram Reminder Bot (production-ready)
# - Build & Push image
# - Deploy to Cloud Run (asia-southeast1)
# - Set APP_URL after deploy
# - Health check /health
# ‡πÉ‡∏ä‡πâ Container Registry (gcr.io) ‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°; ‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ Artifact Registry ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ

steps:
  # 1) Build image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:latest'
      - '.'
    env:
      - 'DOCKER_BUILDKIT=1'

  # 2) Push image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot'
    waitFor: ['build-image']

  # 3) Deploy to Cloud Run (asia-southeast1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-cloudrun'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'telegram-reminder-bot'
      - '--image'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
      - '--region'
      - 'asia-southeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '256Mi'
      - '--cpu'
      - '0.25'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '80'
      - '--set-env-vars'
      - >
        NODE_ENV=production,
        TZ=Asia/Bangkok,
        GOOGLE_CLOUD_REGION=asia-southeast1,
        TELEGRAM_BOT_TOKEN=${_TELEGRAM_BOT_TOKEN},
        TELEGRAM_CHAT_ID=${_TELEGRAM_CHAT_ID},
        ADMIN_CHAT_ID=${_ADMIN_CHAT_ID},
        TIDB_HOST=${_TIDB_HOST},
        TIDB_PORT=${_TIDB_PORT},
        TIDB_USER=${_TIDB_USER},
        TIDB_PASSWORD=${_TIDB_PASSWORD},
        TIDB_DATABASE=${_TIDB_DATABASE},
        TIDB_ENABLE_SSL=true,
        LOG_LEVEL=${_LOG_LEVEL},
        LOG_TO_FILE=false,
        CRON_SECRET=${_CRON_SECRET}
    waitFor: ['push-image']

  # 4) Set APP_URL = service URL (‡∏ó‡∏≥‡∏´‡∏•‡∏±‡∏á deploy ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏±‡πâ‡∏á webhook ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'set-app-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe telegram-reminder-bot --region=asia-southeast1 --format="value(status.url)")
        echo "Setting APP_URL=$SERVICE_URL"
        gcloud run services update telegram-reminder-bot \
          --region=asia-southeast1 \
          --set-env-vars APP_URL=$SERVICE_URL

  # 5) (optional) force traffic to latest
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'update-traffic'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'telegram-reminder-bot'
      - '--to-latest'
      - '--region'
      - 'asia-southeast1'
    waitFor: ['set-app-url']

  # 6) Health check
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'health-check'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe telegram-reminder-bot --region=asia-southeast1 --format="value(status.url)")
        echo "üîç Health checking: $SERVICE_URL/health"
        sleep 10
        for i in {1..5}; do
          if curl -fsS "$SERVICE_URL/health"; then
            echo "‚úÖ Health check passed"
            exit 0
          fi
          echo "‚è≥ Health check attempt $i failed, retrying in 10s..."
          sleep 10
        done
        echo "‚ùå Health check failed after 5 attempts"
        exit 1
    waitFor: ['update-traffic']

# Vars ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Trigger (‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Trigger UI)
substitutions:
  _TELEGRAM_BOT_TOKEN: 'PLACEHOLDER'
  _TELEGRAM_CHAT_ID: 'PLACEHOLDER'
  _ADMIN_CHAT_ID: 'PLACEHOLDER'
  _TIDB_HOST: 'PLACEHOLDER'
  _TIDB_PORT: '4000'
  _TIDB_USER: 'PLACEHOLDER'
  _TIDB_PASSWORD: 'PLACEHOLDER'
  _TIDB_DATABASE: 'telegram_bot'
  _LOG_LEVEL: 'INFO'
  _CRON_SECRET: 'PLACEHOLDER'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: 'CLOUD_LOGGING_ONLY'

# Build timeout (20m)
timeout: '1200s'

images:
  - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:latest'

tags:
  - 'telegram-bot'
  - 'cloud-run'
  - 'production'
