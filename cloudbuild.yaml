# Cloud Build configuration for Telegram Reminder Bot
# Builds and deploys to Google Cloud Run automatically
steps:
  # Step 1: Build the Docker container
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:latest'
      - '.'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Step 2: Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-cloudrun'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'telegram-reminder-bot'
      - '--image'
      - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '256Mi'
      - '--cpu'
      - '0.25'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '80'
      - '--set-env-vars'
      - >
        NODE_ENV=production,
        TZ=Asia/Bangkok,
        TELEGRAM_BOT_TOKEN=${_TELEGRAM_BOT_TOKEN},
        TELEGRAM_CHAT_ID=${_TELEGRAM_CHAT_ID},
        ADMIN_CHAT_ID=${_ADMIN_CHAT_ID},
        TIDB_HOST=${_TIDB_HOST},
        TIDB_PORT=${_TIDB_PORT},
        TIDB_USER=${_TIDB_USER},
        TIDB_PASSWORD=${_TIDB_PASSWORD},
        TIDB_DATABASE=${_TIDB_DATABASE},
        TIDB_ENABLE_SSL=true,
        LOG_LEVEL=${_LOG_LEVEL},
        LOG_TO_FILE=false,
        CRON_SECRET=${_CRON_SECRET}
    waitFor: ['push-image']

  # Step 4: Update traffic to new revision (optional validation step)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'update-traffic'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'telegram-reminder-bot'
      - '--to-latest'
      - '--region'
      - 'us-central1'
    waitFor: ['deploy-cloudrun']

  # Step 5: Verify deployment health
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'health-check'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get the service URL dynamically
        SERVICE_URL=$(gcloud run services describe telegram-reminder-bot --region=us-central1 --format="value(status.url)")
        echo "üîç Health checking: $SERVICE_URL/health"
        # Wait a bit for deployment to stabilize
        sleep 10
        # Perform health check with retry
        for i in {1..5}; do
          if curl -f "$SERVICE_URL/health"; then
            echo "‚úÖ Health check passed"
            exit 0
          fi
          echo "‚è≥ Health check attempt $i failed, retrying in 10s..."
          sleep 10
        done
        echo "‚ùå Health check failed after 5 attempts"
        exit 1
    waitFor: ['update-traffic']

# Substitution variables (configured in Cloud Build triggers)
substitutions:
  _TELEGRAM_BOT_TOKEN: 'PLACEHOLDER' # Set in Cloud Build trigger
  _TELEGRAM_CHAT_ID: 'PLACEHOLDER'   # Set in Cloud Build trigger  
  _ADMIN_CHAT_ID: 'PLACEHOLDER'      # Set in Cloud Build trigger
  _TIDB_HOST: 'PLACEHOLDER'          # Set in Cloud Build trigger
  _TIDB_PORT: '4000'                 # Default TiDB port
  _TIDB_USER: 'PLACEHOLDER'          # Set in Cloud Build trigger
  _TIDB_PASSWORD: 'PLACEHOLDER'      # Set in Cloud Build trigger
  _TIDB_DATABASE: 'telegram_bot'     # Default database name
  _LOG_LEVEL: 'INFO'                 # Default log level for production
  _CRON_SECRET: 'PLACEHOLDER'        # Set in Cloud Build trigger

# Build options
options:
  # Use high-performance machine for faster builds
  machineType: 'E2_HIGHCPU_8'
  # Increase build timeout for container operations
  timeout: '1200s'
  # Use Docker layer caching for faster builds
  env:
    - 'DOCKER_BUILDKIT=1'
  # Log build output to Cloud Logging
  logging: 'CLOUD_LOGGING_ONLY'

# Build timeout (20 minutes)
timeout: '1200s'

# Images to build and push
images:
  - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/telegram-reminder-bot:latest'

# Build tags for organization
tags:
  - 'telegram-bot'
  - 'cloud-run'
  - 'production'